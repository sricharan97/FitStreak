package com.apptimistiq.android.fitstreak.main.recipe.di

import androidx.lifecycle.ViewModel
import com.apptimistiq.android.fitstreak.di.ViewModelKey
import com.apptimistiq.android.fitstreak.main.recipe.RecipeViewModel
import dagger.Binds
import dagger.Module
import dagger.multibindings.IntoMap

/**
 * Dagger module that provides dependencies for the Recipes feature.
 *
 * This abstract class defines bindings for ViewModel dependencies used in the
 * Recipes feature. Using [Binds] is more efficient than [Provides] for simple
 * bindings where a concrete implementation is directly mapped to an interface.
 */
@Module
abstract class RecipesTrackModule {

    /**
     * Binds [RecipeViewModel] instance as a [ViewModel] for injection.
     *
     * The [IntoMap] and [ViewModelKey] annotations enable the ViewModel to be retrievable
     * from the ViewModelProvider.Factory generated by Dagger.
     *
     * @param viewModel The RecipeViewModel instance to be provided
     * @return The viewModel bound as a ViewModel
     */
    @Binds
    @IntoMap
    @ViewModelKey(RecipeViewModel::class)
    abstract fun bindViewModel(viewModel: RecipeViewModel): ViewModel
}
